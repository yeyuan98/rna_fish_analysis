probes:
  # What probes to analyze
  ["probe_1", "probe_2"]

pipeline_light_train: # which light trains to process for fishdot and segmentation
  fishdot: "fish_t1"
  segmentation: "cytoplasm"

data_roots:
  # Basename for input/output data
  input: "test_data"
  input_ext: ".czi"  # Remember to keep the "."
  generated_scripts: "generated_scripts"


light_trains:
  # Light train (user friendly name) - (internal name) conversion
  # Microscope specific, refer to OME-TIFF metadata
  fish_t1: "T1"
  fish_t2: "T2"
  cytoplasm: "T3"
  nucleus: "T4"

# Workflow-specific configurations
segmentation:
  model: "full_cell" # what model to use
  device: "cpu" # where to run the model, either cuda or cpu. GPU is likely to be 10X faster if not more.
  manual: false # if the user will override model-generated masks and use manual masks instead for analysis
  manual_threshold: 500 # threshold for manual masks, in nanometer unit
fishdot:
  psf_xy: 123.6 # PSF in xy direction, in nanometer unit
  psf_z: 360.5 # PSF in z direction, in nanometer unit
  threshold: 30 # threshold setting, global, in arbitrary unit as defined by AIRLOCALIZE


# Resource allocation defaults
#   These defaults are quite generous, typically allocating more than necessary.
resources:
  # different resources allocated to the rules
  threads:
    integration: 1
    segmentation: 1
    fishdot: 2
    sample_convert: 1
    sample_singlechannel: 1
  mem_mb:
    integration: 7000
    segmentation: 7000
    fishdot: 8000
    sample_convert: 1000
    sample_singlechannel: 1000
  max_time:
    integration: "1:00:00"
    segmentation: "1:00:00"
    fishdot: "1:00:00"
    sample_convert: "1:00:00"
    sample_singlechannel: "1:00:00"
  verbose_log:
    integration: true
    segmentation: true
    fishdot: true
    sample_convert: true


# Internal method parameters
segmentation_models:
  # sets suitable internal method parameters given the segmentation model. Only change if new models are trained.
  full_cell:
    # This model is suitable for recognizing lLNv neurons with clk>mCD8GFP marker signal in whole-mount D.mel brains.
    MIP: "onesided"
    z_projection_physical: 0.6
    encoder: "timm-efficientnet-b0"
    weights: "imagenet"
    augmentation_function: "augmentations_enhanceThenResize"
    augmentation_function_params: {"padding":True}  # if no parameter needed, put {} here
    fill: true  # should we perform filling for the output prediction mask
    target_pixels: 320
  nucleus_aggressive:
    # This model is suitable for estimating nucleus of lLNv neurons with clk>mCD8GFP in whole-mount D.mel brains.
    MIP: "onesided"
    z_projection_physical: 0.6
    encoder: "timm-efficientnet-b0"
    weights: "imagenet"
    augmentation_function: "augmentations_enhanceThenResize"
    augmentation_function_params: {"padding":True}  # if no parameter needed, put {} here
    fill: true  # should we perform filling for the output prediction mask
    target_pixels: 320